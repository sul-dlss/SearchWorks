<%= render layout.new(document:) do |component| %>
  <% component.with_title { presenter.heading } %>
  <% component.with_header do %>
    <% if presenter.vernacular_title.present? %>
      <p class='vernacular-title h2 fw-normal mt-3'><%= presenter.vernacular_title %></p>
    <% end %>

    <div class='upper-record-metadata mb-4 mb-lg-5'>
      <div><%= helpers.render_resource_icon presenter.formats %> <%= presenter.document_format %></div>
    </div>
  <% end %>

  <% component.with_embed do %>
    <% if document.managed_purls.many? ||
          (document.druid && (!document.mods? || document.published_content?)) ||
          document.is_a_collection? %>
      <div class="mb-4 mb-lg-5">
        <%= case
          when document.managed_purls.many?
            render 'catalog/managed_purl_embed', document: document
          when document.druid && (!document.mods? || document.published_content?)
            render Record::Item::EmbedComponent.new(druid: document.druid)
          end %>
        <% if document.is_a_collection? %>
          <%= render 'collection_members/placeholder', document: document %>
        <% end %>
      </div>
    <% end %>
  <% end %>

  <% component.with_metadata do %>
    <%= render Searchworks4::DocumentSectionLayout.new(title: 'Description') do %>
      <% document.mods.resourceType.each do |resource_type| %>
        <div class="my-2">
          <%= mods_record_field(resource_type) %>
        </div>
      <% end %>

      <% document.mods.imprint.each do |imprint| %>
        <div class="my-2">
          <%= mods_record_field(imprint) %>
        </div>
      <% end %>

      <% document.mods.language.each do |language| %>
        <div class="my-2">
          <%= mods_record_field(language, ', ') %>
        </div>
      <% end %>

      <% document.mods.description.each do |description| %>
        <div class="my-2">
          <%= mods_record_field(description) %>
        </div>
      <% end %>

      <% document.mods.extent.each do |extent| %>
        <div class="my-2">
          <%= mods_record_field(extent) %>
        </div>
      <% end %>

      <% document.mods.form.each do |form| %>
        <div class="my-2">
          <%= mods_record_field(form) %>
        </div>
      <% end %>

      <% document.mods.geo.each do |geo| %>
        <div class="my-2">
          <%= mods_record_field(geo) %>
        </div>
      <% end %>

      <% document.mods.cartographics.each do |cartographic| %>
        <div class="my-2">
          <%= mods_record_field(cartographic) %>
        </div>
      <% end %>
    <% end %>

    <%= render Searchworks4::DocumentSectionLayout.new(title: 'Creators/Contributors') do %>
      <% document.mods.name&.each do |name| %>
        <div class="my-2" data-controller="list-toggle" data-list-toggle-target="group">
          <%= mods_name_field(name) { |name| link_to(name, search_catalog_path(q: "\"#{name}\"", search_field: 'search_author')) } %>
        </div>
      <% end %>
    <% end %>

    <%= render Searchworks4::DocumentSectionLayout.new(title: 'Abstract/Contents', dl_classes: 'dl-horizontal dl-text') do %>
      <% document.mods.abstract.each do |abstract| %>
        <div class="my-2">
          <%= truncated_mods_record_field(abstract, value_transformer: ->(v) { tag.div CGI.unescapeHTML(v), data: { 'long-text-target' => 'text' } } ) %>
        </div>
      <% end %>

      <% document.mods.contents.each do |contents| %>
        <div class="my-2">
          <%= truncated_mods_record_field(contents, value_transformer: ->(v) { tag.div v, data: { 'long-text-target' => 'text' } } ) %>
        </div>
      <% end %>
    <% end %>

    <%= render Searchworks4::DocumentSectionLayout.new(title: 'Subjects') do %>
      <% if document.mods.subject.any?(&:values) %>
        <%= linked_mods_subjects(document.mods.subject) %>
      <% end %>
      <% if document.mods.genre.any?(&:values) %>
        <%= linked_mods_genres(document.mods.genre) %>
      <% end %>
    <% end %>

    <%= render Searchworks4::DocumentSectionLayout.new(title: 'Bibliographic information') do %>
      <%= render(Record::ModsBibliographicComponent.new(document: document)) %>
    <% end %>
  <% end %>
<% end %>
